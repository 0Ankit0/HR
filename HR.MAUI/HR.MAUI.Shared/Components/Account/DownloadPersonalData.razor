@page "/account/download-personal-data"
@using System.Text.Json
@using System.Reflection
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IJSRuntime JS

<h3>Personal Data</h3>
@if (!isAuthenticated)
{
    <p>You must be logged in to download your personal data.</p>
}
else
{
    <div class="mb-3 d-flex align-items-center">
        <div class="flex-grow-1 position-relative">
            <span class="form-control-plaintext text-body">Download a copy of your personal data stored with us.</span>
        </div>
        <button type="button" class="btn btn-outline-primary ms-2" @onclick="DownloadData">
            Download
        </button>
    </div>
    @if (!string.IsNullOrEmpty(statusMessage))
    {
        <div class="alert alert-info mt-2">@statusMessage</div>
    }
}

@code {
    private string? statusMessage;
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsAuthenticatedAsync();
    }

    private async Task DownloadData()
    {
        try
        {
            var response = await Http.GetAsync("/api/account/downloadpersonaldata");
            if (response.IsSuccessStatusCode)
            {
                var data = await response.Content.ReadAsStringAsync();
                await JS.InvokeVoidAsync("saveAsFile", "PersonalData.json", data);
            }
            else
            {
                statusMessage = await response.Content.ReadAsStringAsync();
            }
        }
        catch
        {
            statusMessage = "Failed to download personal data.";
        }
    }
}