@page "/account/personal-data"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<h1>Personal Data</h1>
@if (!isAuthenticated)
{
    <p>You must be logged in to view your personal data.</p>
}
else
{
    <p>Your email: @userEmail</p>
    <button class="btn btn-danger" @onclick="DeletePersonalData">Delete Personal Data</button>
    @if (!string.IsNullOrEmpty(statusMessage))
    {
        <div class="alert alert-info mt-2">@statusMessage</div>
    }
}

@code {
    private string? userEmail;
    private string? statusMessage;
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (isAuthenticated)
        {
            var result = await Http.GetFromJsonAsync<PersonalDataDto>("/api/account/personaldata");
            userEmail = result?.Email;
        }
    }

    private async Task DeletePersonalData()
    {
        var response = await Http.DeleteAsync("/api/account/personaldata");
        if (response.IsSuccessStatusCode)
        {
            statusMessage = "Personal data deleted.";
            NavigationManager.NavigateTo("/");
        }
        else
        {
            statusMessage = await response.Content.ReadAsStringAsync();
        }
    }

    public class PersonalDataDto
    {
        public string Email { get; set; } = string.Empty;
    }
}
