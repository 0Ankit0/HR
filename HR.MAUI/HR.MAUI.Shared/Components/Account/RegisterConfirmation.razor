@page "/account/registerconfirmation"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Register confirmation</h1>
@if (string.IsNullOrEmpty(Email))
{
    <p>
        A valid email address must be supplied.
    </p>
}
else if (displayConfirmAccountLink && !string.IsNullOrEmpty(emailConfirmationUrl))
{
    <p>
        This app does not currently have a real email sender registered, see <a href="https://aka.ms/aspaccountconf">these docs</a> for how to configure a real email sender.
        Normally this would be emailed: <a id="confirm-link" href="@emailConfirmationUrl">Click here to confirm your account</a>
    </p>
}
else
{
    <p>
        Please check your email to confirm your account.
    </p>
}

@code {
    [Parameter,SupplyParameterFromQuery]
    public string Email { get; set; } = string.Empty;

    private string? emailConfirmationUrl;
    private bool displayConfirmAccountLink;
    private bool isDev = false;

    protected override async Task OnInitializedAsync()
    {
        

#if DEBUG
        isDev = true;
#endif
        displayConfirmAccountLink = isDev;

        if (displayConfirmAccountLink)
        {
            try
            {
                var response = await Http.GetAsync($"/api/account/registerconfirmation?email={Uri.EscapeDataString(Email)}");
                if (response.IsSuccessStatusCode)
                {
                    var json = await response.Content.ReadFromJsonAsync<RegisterConfirmationResponse>();
                    emailConfirmationUrl = json?.ConfirmationUrl;
                }
            }
            catch
            {
                emailConfirmationUrl = null;
            }
        }
    }

    private class RegisterConfirmationResponse
    {
        public string? ConfirmationUrl { get; set; }
    }
}