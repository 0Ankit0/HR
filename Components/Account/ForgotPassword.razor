@page "/account/forgotpassword"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Forgot your password?</h1>
<h2>Enter your email.</h2>
<hr />
<EditForm Model="forgotModel" OnValidSubmit="HandleForgotPassword">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-floating mb-3">
        <InputText @bind-Value="forgotModel.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
        <label class="form-label">Email</label>
        <ValidationMessage For="@(() => forgotModel.Email)" />
    </div>
    <button type="submit" class="w-100 btn btn-lg btn-primary">Reset Password</button>
</EditForm>
@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert alert-info mt-2">@statusMessage</div>
}

@code {
    private ForgotModel forgotModel = new ForgotModel();
    private string? statusMessage;

    private async Task HandleForgotPassword()
    {
        statusMessage = string.Empty;
        if (string.IsNullOrWhiteSpace(forgotModel.Email))
        {
            statusMessage = "Email is required.";
            return;
        }

        var response = await Http.PostAsJsonAsync("api/password/forgot", new { Email = forgotModel.Email });
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/account/forgotpasswordconfirmation");
        }
        else
        {
            statusMessage = await response.Content.ReadAsStringAsync();
        }
    }

    public class ForgotModel
    {
        [Required]
        [EmailAddress]
        public string? Email { get; set; }
    }
}
